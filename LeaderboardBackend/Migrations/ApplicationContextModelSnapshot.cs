// <auto-generated />
using System;
using LeaderboardBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LeaderboardBackend.Migrations
{
	[DbContext(typeof(ApplicationContext))]
	partial class ApplicationContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "6.0.1")
				.HasAnnotation("Relational:MaxIdentifierLength", 63);

			NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

			modelBuilder.Entity("LeaderboardBackend.Models.Category", b =>
				{
					b.Property<decimal>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("numeric(20,0)")
						.HasColumnName("id");

					b.Property<decimal>("LeaderboardId")
						.HasColumnType("numeric(20,0)")
						.HasColumnName("leaderboard_id");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("name");

					b.Property<int>("PlayersMax")
						.HasColumnType("integer")
						.HasColumnName("players_max");

					b.Property<int>("PlayersMin")
						.HasColumnType("integer")
						.HasColumnName("players_min");

					b.Property<string>("Rules")
						.HasColumnType("text")
						.HasColumnName("rules");

					b.Property<string>("Slug")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("slug");

					b.HasKey("Id")
						.HasName("pk_categories");

					b.HasIndex("LeaderboardId")
						.HasDatabaseName("ix_categories_leaderboard_id");

					b.ToTable("categories", (string)null);
				});

			modelBuilder.Entity("LeaderboardBackend.Models.Leaderboard", b =>
				{
					b.Property<decimal>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("numeric(20,0)")
						.HasColumnName("id");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("name");

					b.Property<string>("Rules")
						.HasColumnType("text")
						.HasColumnName("rules");

					b.Property<string>("Slug")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("slug");

					b.HasKey("Id")
						.HasName("pk_leaderboards");

					b.ToTable("leaderboards", (string)null);
				});

			modelBuilder.Entity("LeaderboardBackend.Models.User", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid")
						.HasColumnName("id");

					b.Property<string>("Email")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("email");

					b.Property<string>("Password")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("password");

					b.Property<string>("Username")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("username");

					b.HasKey("Id")
						.HasName("pk_users");

					b.ToTable("users", (string)null);
				});

			modelBuilder.Entity("LeaderboardBackend.Models.Category", b =>
				{
					b.HasOne("LeaderboardBackend.Models.Leaderboard", "Leaderboard")
						.WithMany("Categories")
						.HasForeignKey("LeaderboardId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired()
						.HasConstraintName("fk_categories_leaderboards_leaderboard_id");

					b.Navigation("Leaderboard");
				});

			modelBuilder.Entity("LeaderboardBackend.Models.Leaderboard", b =>
				{
					b.Navigation("Categories");
				});
#pragma warning restore 612, 618
		}
	}
}
